<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="10" skipped="0" tests="10" time="1.662" timestamp="2022-09-13T14:09:33.524074" hostname="RSL-LAP-100"><testcase classname="tests.test_arabic" name="test_to_arabic_number_1_rta" file="tests\test_arabic.py" line="5" time="0.005"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">def test_to_arabic_number_1_rta():
        """simple to_arabic_number (I) == 1"""
&gt;       assert to_arabic_number("I") == 1

tests\test_arabic.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1130: in __call__
    return self.main(*args, **kwargs)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1054: in main
    with self.make_context(prog_name, args, **extra) as ctx:
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:920: in make_context
    self.parse_args(ctx, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1378: in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2356: in handle_parse_result
    value, source = self.consume_value(ctx, opts)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2919: in consume_value
    value = self.prompt_for_value(ctx)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2842: in prompt_for_value
    return prompt(
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:166: in prompt
    value = prompt_func(prompt)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:142: in prompt_func
    return f(" ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x0000021119945730&gt;
args = ()

    def read(self, *args):
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\_pytest\capture.py:192: OSError</failure></testcase><testcase classname="tests.test_arabic" name="test_to_arabic_number_2008_rta" file="tests\test_arabic.py" line="10" time="0.002"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">def test_to_arabic_number_2008_rta():
        """multi to_arabic_number (MMVIII) == 2008"""
&gt;       assert to_arabic_number("MMVIII") == 2008

tests\test_arabic.py:13: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1130: in __call__
    return self.main(*args, **kwargs)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1054: in main
    with self.make_context(prog_name, args, **extra) as ctx:
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:920: in make_context
    self.parse_args(ctx, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1378: in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2356: in handle_parse_result
    value, source = self.consume_value(ctx, opts)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2919: in consume_value
    value = self.prompt_for_value(ctx)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2842: in prompt_for_value
    return prompt(
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:166: in prompt
    value = prompt_func(prompt)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:142: in prompt_func
    return f(" ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x0000021119945730&gt;
args = ()

    def read(self, *args):
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\_pytest\capture.py:192: OSError</failure></testcase><testcase classname="tests.test_arabic" name="test_to_arabic_number_4_rta" file="tests\test_arabic.py" line="15" time="0.002"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">def test_to_arabic_number_4_rta():
        """simple subtraction to_arabic_number (IV) == 4"""
&gt;       assert to_arabic_number("IV") == 4

tests\test_arabic.py:18: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1130: in __call__
    return self.main(*args, **kwargs)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1054: in main
    with self.make_context(prog_name, args, **extra) as ctx:
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:920: in make_context
    self.parse_args(ctx, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1378: in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2356: in handle_parse_result
    value, source = self.consume_value(ctx, opts)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2919: in consume_value
    value = self.prompt_for_value(ctx)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2842: in prompt_for_value
    return prompt(
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:166: in prompt
    value = prompt_func(prompt)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:142: in prompt_func
    return f(" ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x0000021119945730&gt;
args = ()

    def read(self, *args):
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\_pytest\capture.py:192: OSError</failure></testcase><testcase classname="tests.test_arabic" name="test_to_arabic_number_90_rta" file="tests\test_arabic.py" line="20" time="0.002"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">def test_to_arabic_number_90_rta():
        """subtraction to_arabic_number (XC) == 90"""
&gt;       assert to_arabic_number("XC") == 90

tests\test_arabic.py:23: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1130: in __call__
    return self.main(*args, **kwargs)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1054: in main
    with self.make_context(prog_name, args, **extra) as ctx:
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:920: in make_context
    self.parse_args(ctx, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1378: in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2356: in handle_parse_result
    value, source = self.consume_value(ctx, opts)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2919: in consume_value
    value = self.prompt_for_value(ctx)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2842: in prompt_for_value
    return prompt(
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:166: in prompt
    value = prompt_func(prompt)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:142: in prompt_func
    return f(" ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x0000021119945730&gt;
args = ()

    def read(self, *args):
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\_pytest\capture.py:192: OSError</failure></testcase><testcase classname="tests.test_arabic" name="test_to_arabic_number_3999_rta" file="tests\test_arabic.py" line="25" time="0.002"><failure message="OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.">def test_to_arabic_number_3999_rta():
        """big to_arabic_number (MMMCMXCIX) == 3999"""
&gt;       assert to_arabic_number("MMMCMXCIX") == 3999

tests\test_arabic.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1130: in __call__
    return self.main(*args, **kwargs)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1054: in main
    with self.make_context(prog_name, args, **extra) as ctx:
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:920: in make_context
    self.parse_args(ctx, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:1378: in parse_args
    value, args = param.handle_parse_result(ctx, opts, args)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2356: in handle_parse_result
    value, source = self.consume_value(ctx, opts)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2919: in consume_value
    value = self.prompt_for_value(ctx)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\core.py:2842: in prompt_for_value
    return prompt(
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:166: in prompt
    value = prompt_func(prompt)
..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\click\termui.py:142: in prompt_func
    return f(" ")
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;_pytest.capture.DontReadFromInput object at 0x0000021119945730&gt;
args = ()

    def read(self, *args):
&gt;       raise OSError(
            "pytest: reading from stdin while output is captured!  Consider using `-s`."
        )
E       OSError: pytest: reading from stdin while output is captured!  Consider using `-s`.

..\..\..\.pyenv\pyenv-win\versions\3.9.6\lib\site-packages\_pytest\capture.py:192: OSError</failure></testcase><testcase classname="tests.test_roman" name="test_to_roman_numeral_1_atn" file="tests\test_roman.py" line="5" time="0.002"><failure message="AssertionError: assert None == 'I'&#10; +  where None = to_roman_numeral(1)">def test_to_roman_numeral_1_atn():
        """simple to_roman_numeral (1) == I"""
&gt;       assert to_roman_numeral(1) == "I"
E       AssertionError: assert None == 'I'
E        +  where None = to_roman_numeral(1)

tests\test_roman.py:8: AssertionError</failure></testcase><testcase classname="tests.test_roman" name="test_to_roman_numeral_2008_atn" file="tests\test_roman.py" line="10" time="0.002"><failure message="AssertionError: assert None == 'MMVIII'&#10; +  where None = to_roman_numeral(2008)">def test_to_roman_numeral_2008_atn():
        """multi to_roman_numeral (2008) == MMVIII"""
&gt;       assert to_roman_numeral(2008) == "MMVIII"
E       AssertionError: assert None == 'MMVIII'
E        +  where None = to_roman_numeral(2008)

tests\test_roman.py:13: AssertionError</failure></testcase><testcase classname="tests.test_roman" name="test_to_roman_numeral_4_atn" file="tests\test_roman.py" line="15" time="0.002"><failure message="AssertionError: assert None == 'IV'&#10; +  where None = to_roman_numeral(4)">def test_to_roman_numeral_4_atn():
        """simple subtraction to_roman_numeral (4) == IV"""
&gt;       assert to_roman_numeral(4) == "IV"
E       AssertionError: assert None == 'IV'
E        +  where None = to_roman_numeral(4)

tests\test_roman.py:18: AssertionError</failure></testcase><testcase classname="tests.test_roman" name="test_to_roman_numeral_90_atn" file="tests\test_roman.py" line="20" time="0.001"><failure message="AssertionError: assert None == 'XC'&#10; +  where None = to_roman_numeral(90)">def test_to_roman_numeral_90_atn():
        """subtraction to_roman_numeral (90) == XC"""
&gt;       assert to_roman_numeral(90) == "XC"
E       AssertionError: assert None == 'XC'
E        +  where None = to_roman_numeral(90)

tests\test_roman.py:23: AssertionError</failure></testcase><testcase classname="tests.test_roman" name="test_to_roman_numeral_3999_atn" file="tests\test_roman.py" line="25" time="0.002"><failure message="AssertionError: assert None == 'MMMCMXCIX'&#10; +  where None = to_roman_numeral(3999)">def test_to_roman_numeral_3999_atn():
        """big to_roman_numeral (3999) == MMMCMXCIX"""
&gt;       assert to_roman_numeral(3999) == "MMMCMXCIX"
E       AssertionError: assert None == 'MMMCMXCIX'
E        +  where None = to_roman_numeral(3999)

tests\test_roman.py:28: AssertionError</failure></testcase></testsuite></testsuites>